{"version":3,"sources":["ng-wig.js"],"names":[],"mappings":"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","file":"ng-wig.js","sourcesContent":["/**\n * version: 3.0.4\n */\nangular.module('ngWig', ['ngwig-app-templates']);\nangular.ngWig = {\n  version: '3.0.1'\n};\n\nangular.module('ngWig')\n  .component('ngWigPlugin', {\n    bindings: {\n      plugin: '<',\n      execCommand: '=',\n      editMode: '=',\n      disabled: '=',\n      options: '<',\n      content: '='\n    },\n    controller: [\"$scope\", \"$element\", \"$compile\", function($scope, $element, $compile) {\n      $element.replaceWith($compile('<' + this.plugin.pluginName + ' ' +\n        'plugin=' + '\"$ctrl.plugin\"' +\n        'exec-command=' + '\"$ctrl.execCommand\"' +\n        'edit-mode=' + '\"$ctrl.editMode\"' +\n        'disabled=' + '\"$ctrl.disabled\"' +\n        'options=' + '\"$ctrl.options\"' +\n        'content=' + '\"$ctrl.content\"' +\n        '/>')($scope));\n    }]\n  });\ndescribe('component: ngWigPlugin', () => {\n    let component;\n    let scope;\n    let plugin = {\n        name: 'myPlugin',\n        pluginName: 'my-plugin'\n    };\n    let execCommand = 'fakeCmd()';\n    let editMode = false;\n    let disabled = false;\n    let options = ['Option 1', 'Option 2'];\n    let content = 'Fake text';\n    let element = angular.element('<div></div>');\n    let compile;\n\n    beforeEach(module('ngWig'));\n\n    beforeEach(inject((_$componentController_, _$rootScope_, _$compile_) => {\n        scope = _$rootScope_.$new();\n        compile = _$compile_;\n\n        spyOn(element, 'replaceWith');\n        \n        component = _$componentController_('ngWigPlugin', \n                                            { $scope: scope, $element: element }, \n                                            { plugin: plugin, execCommand: execCommand, editMode: editMode, disabled: disabled, options: options, content: content }\n                                            );\n    }));\n    \n    it('should expose plugin', () => {\n        expect(component.plugin).toEqual(plugin);\n    });\n\n    it('should expose execCommand', () => {\n        expect(component.execCommand).toEqual(execCommand);\n    });\n\n    it('should expose editMode', () => {\n        expect(component.editMode).toEqual(editMode);\n    });\n\n    it('should expose disabled', () => {\n        expect(component.disabled).toEqual(disabled);\n    });\n\n    it('should expose options', () => {\n        expect(component.options).toEqual(options);\n    });\n\n    it('should expose content', () => {\n        expect(component.content).toEqual(content);\n    });\n\n    it('should replace with the plugin template', () => {\n        let pluginElement = compile('<' + component.plugin.pluginName + ' ' +\n        'plugin=' + '\"$ctrl.plugin\"' +\n        'exec-command=' + '\"$ctrl.execCommand\"' +\n        'edit-mode=' + '\"$ctrl.editMode\"' +\n        'disabled=' + '\"$ctrl.disabled\"' +\n        'options=' + '\"$ctrl.options\"' +\n        'content=' + '\"$ctrl.content\"' +\n        '/>')(scope);\n        \n        expect(element.replaceWith).toHaveBeenCalledWith(pluginElement);\n    });\n});\n\nangular.module('ngWig').provider('ngWigToolbar', function () {\n\n  var buttonLibrary = {\n    list1: {title: 'Unordered List', command: 'insertunorderedlist', styleClass: 'list-ul'},\n    list2: {title: 'Ordered List', command: 'insertorderedlist', styleClass: 'list-ol'},\n    bold: {title: 'Bold', command: 'bold', styleClass: 'bold'},\n    italic: {title: 'Italic', command: 'italic', styleClass: 'italic'},\n    link: {title: 'Link', command: 'createlink', styleClass: 'link'}\n  };\n\n  var defaultButtonsList = ['list1', 'list2', 'bold', 'italic', 'link'];\n\n  var isButtonActive = function () {\n    return this.command && document.queryCommandState(this.command);\n  };\n\n  this.setButtons = function(buttons) {\n    if(!angular.isArray(buttons)) {\n      throw 'Argument \"buttons\" should be an array';\n    }\n\n    defaultButtonsList = buttons;\n  };\n\n  this.addStandardButton = function (name, title, command, styleClass) {\n    if(!name || !title || !command) {\n      throw 'Arguments \"name\", \"title\" and \"command\" are required';\n    }\n\n    styleClass = styleClass || '';\n    buttonLibrary[name] = {title: title, command: command, styleClass: styleClass}\n    defaultButtonsList.push(name);\n  };\n\n  this.addCustomButton = function (name, pluginName) {\n    if(!name || !pluginName) {\n      throw 'Arguments \"name\" and \"pluginName\" are required';\n    }\n\n    buttonLibrary[name] = {pluginName: pluginName, isComplex: true};\n    defaultButtonsList.push(name);\n  };\n\n  this.$get = function () {\n    return {\n      getToolbarButtons: function(list) {\n        var toolbarButtons = [];\n        (list || defaultButtonsList).forEach(function(buttonKey) {\n          if(!buttonLibrary[buttonKey]) {\n            throw 'There is no \"' + buttonKey + '\" in your library. Possible variants: ' + Object.keys(buttonLibrary);\n          }\n\n          var button = angular.copy(buttonLibrary[buttonKey]);\n\n          if(!angular.isFunction(button.isActive)) {\n            button.isActive = isButtonActive;\n          }\n\n          toolbarButtons.push(button);\n        });\n        return toolbarButtons;\n      }\n    };\n  };\n\n});\ndescribe('provider: ngWigToolbar', () => {\n    let toolbarProvider;\n    \n    beforeEach(() => {\n        module('ngWig', (_ngWigToolbarProvider_) => {\n            toolbarProvider = _ngWigToolbarProvider_;\n        });\n\n        inject();\n    });\n\n    describe('setButtons function', () => {\n        it('should exist', () => {\n            expect(toolbarProvider.setButtons).toBeDefined();\n        });\n\n        it('should throw an error if buttons are not provided', () => {\n            expect(() => { toolbarProvider.setButtons() }).toThrow('Argument \"buttons\" should be an array');\n        });\n\n        it('should not throw an error if buttons are provided', () => {\n           expect(() => { toolbarProvider.setButtons(['button1', 'button2']) }).not.toThrow();\n        });\n    });\n\n    describe('addStandardButton function', () => {\n        it('should exist', () => {\n            expect(toolbarProvider.addStandardButton).toBeDefined();\n        });\n\n        it('should throw an error if name/title/command is not provided', () => {\n            let errorMsg = 'Arguments \"name\", \"title\" and \"command\" are required';\n            \n            expect(() => toolbarProvider.addStandardButton()).toThrow(errorMsg);\n            expect(() => toolbarProvider.addStandardButton('button1')).toThrow(errorMsg);\n            expect(() => toolbarProvider.addStandardButton('button1', 'My button')).toThrow(errorMsg);\n        });\n\n        it('should not throw an error if name, title and command are provided', () => {\n            expect(() => { toolbarProvider.addStandardButton('button1', 'My button', 'fakeCmd()') }).not.toThrow();\n        });\n    });\n\n    describe('addCustomButton function', () => {\n        it('should exist', () => {\n            expect(toolbarProvider.addCustomButton).toBeDefined();\n        });\n\n        it('should throw an error if name/plugin is not provided', () => {\n            let errorMsg = 'Arguments \"name\" and \"pluginName\" are required';\n\n            expect(() => { toolbarProvider.addCustomButton() }).toThrow(errorMsg);\n            expect(() => { toolbarProvider.addCustomButton('button1') }).toThrow(errorMsg);\n        });\n        \n        it('should not throw an error if name and pluginName are provided', () => {\n            expect(() => { toolbarProvider.addCustomButton('button1', 'my-button') }).not.toThrow();\n        });\n    });\n\n    describe('$get function', () => {\n        it('should exist', () => {\n            expect(toolbarProvider.$get).toBeDefined();\n        });\n\n        describe('getToolbarButtons function', () => {\n            it('should exist', inject(() => {\n                expect(toolbarProvider.$get().getToolbarButtons).toBeDefined();\n            }));\n\n            it('should throw an error if provided buttons have not been added first', () => {\n                expect(() => {\n                    toolbarProvider.$get().getToolbarButtons(['button1'])\n                }).toThrow('There is no \"button1\" in your library. Possible variants: list1,list2,bold,italic,link,clear-styles,forecolor,formats');\n            });\n            \n            it('should return 8 buttons by default', () => {\n                expect(toolbarProvider.$get().getToolbarButtons().length).toEqual(8);\n            });\n\n            it('should return 1 button', () => {\n                toolbarProvider.addCustomButton('button1', 'my-button');\n\n                expect(toolbarProvider.$get().getToolbarButtons(['button1']).length).toEqual(1);\n            });\n\n            it('should add isActive function to a button', () => {\n                toolbarProvider.addCustomButton('button1', 'my-button');\n\n                expect(toolbarProvider.$get().getToolbarButtons(['button1'])[0].isActive).toBeDefined();\n            });\n        });\n    });\n});\n\nangular.module('ngWig')\n  .component('ngWig', {\n    bindings: {\n      content: '=ngModel',\n      options: '<?',\n      onPaste: '&',\n      buttons: '@',\n      beforeExecCommand: '&',\n      afterExecCommand: '&' ,\n      placeholder: '<?'\n    },\n    require: {\n      ngModelController: 'ngModel'\n    },\n    templateUrl: 'ng-wig/views/ng-wig.html',\n    controller: [\"$scope\", \"$element\", \"$q\", \"$attrs\", \"$window\", \"$document\", \"ngWigToolbar\", function($scope, $element, $q, $attrs, $window, $document, ngWigToolbar) {\n\n      var $container = angular.element($element[0].querySelector('#ng-wig-editable'));\n\n      //TODO: clean-up this attrs solution\n      this.required = 'required' in $attrs;\n      this.isSourceModeAllowed = 'sourceModeAllowed' in $attrs;\n      this.editMode = false;\n      this.toolbarButtons = ngWigToolbar.getToolbarButtons(this.buttons && string2array(this.buttons));\n      this.placeholder = $attrs.placeholder;\n      $attrs.$observe('disabled', (isDisabled) => {\n        this.disabled = isDisabled;\n        $container.attr('contenteditable', !isDisabled);\n      });\n      this.isEditorActive = () => $container[0] === $document[0].activeElement;\n      this.toggleEditMode = () => {\n        this.editMode = !this.editMode;\n        if ($window.getSelection().removeAllRanges) {\n          $window.getSelection().removeAllRanges();\n        }\n      };\n\n      this.execCommand = (command, options) => {\n        if (this.editMode) return false;\n\n        if (command === 'createlink' || command === 'insertImage') {\n          options = $window.prompt('Please enter the URL', 'http://');\n          if (!options) {\n            return;\n          }\n        }\n        this.beforeExecCommand({command: command, options: options});\n        $scope.$broadcast('execCommand', {command: command, options: options});\n        this.afterExecCommand({command: command, options: options});\n      };\n\n      this.$onInit = () => {\n        let placeholder = Boolean(this.placeholder);\n        this.ngModelController.$render = () =>  !placeholder ? $container.html(this.ngModelController.$viewValue || '<p></p>') : $container.empty();\n\n        $container.bind('blur keyup change focus click', () => {\n          //view --> model\n          if (placeholder && !$container.html().length || placeholder && $container.html() === \"<br>\") $container.empty();\n          this.ngModelController.$setViewValue($container.html());\n          $scope.$applyAsync();\n        });\n      };\n\n      $container.on('paste', (event) => {\n        if(!$attrs.onPaste){\n          return;\n        }\n\n        let pasteContent;\n        if (window.clipboardData && window.clipboardData.getData) { // IE\n          pasteContent = window.clipboardData.getData('Text');\n        }\n        else{\n          pasteContent = (event.originalEvent || event).clipboardData.getData('text/plain');\n        }\n        event.preventDefault();\n        $q.when(this.onPaste({$event: event, pasteContent: pasteContent})).then((pasteText) => {\n          pasteHtmlAtCaret(pasteText);\n        });\n      });\n\n      $scope.$on('execCommand', (event, params) => {\n        let selection = $document[0].getSelection().toString();\n        let command = params.command;\n        let options = params.options;\n\n        event.stopPropagation && event.stopPropagation();\n\n        $container[0].focus();\n\n        if ($document[0].queryCommandSupported && !$document[0].queryCommandSupported(command)) {\n          throw 'The command \"' + command + '\" is not supported';\n        }\n\n        // use insertHtml for `createlink` command to account for IE/Edge purposes, in case there is no selection\n        if(command === 'createlink' && selection === ''){\n          $document[0].execCommand('insertHtml', false, '<a href=\"' + options + '\">' + options + '</a>');\n        }\n        else{\n          $document[0].execCommand(command, false, options);\n        }\n      });\n\n    }]\n  });\n\n\n//TODO: check the function\nfunction string2array(keysString) {\n  return keysString.split(',').map(Function.prototype.call, String.prototype.trim);\n}\n\n\n//TODO: put contenteditable helper into service\nfunction pasteHtmlAtCaret(html) {\n  var sel, range;\n  if (window.getSelection) {\n    sel = window.getSelection();\n    if (sel.getRangeAt && sel.rangeCount) {\n      range = sel.getRangeAt(0);\n      range.deleteContents();\n\n      // Range.createContextualFragment() would be useful here but is\n      // non-standard and not supported in all browsers (IE9, for one)\n      var el = document.createElement(\"div\");\n      el.innerHTML = html;\n      var frag = document.createDocumentFragment(), node, lastNode;\n      while ( (node = el.firstChild) ) {\n        lastNode = frag.appendChild(node);\n      }\n      range.insertNode(frag);\n\n      // Preserve the selection\n      if (lastNode) {\n        range = range.cloneRange();\n        range.setStartAfter(lastNode);\n        range.collapse(true);\n        sel.removeAllRanges();\n        sel.addRange(range);\n      }\n    }\n  } else if (document.selection && document.selection.type != \"Control\") {\n    // IE < 9\n    document.selection.createRange().pasteHTML(html);\n  }\n}\n\ndescribe('component: ngWig', () => {\n    let component;\n    let $componentController;\n    let controller;\n    let scope;\n    let content = 'Fake text';\n    let options = ['Option 1', 'Option 2'];\n    let buttons = 'button1,button2';\n    let beforeExecCommand;\n    let afterExecCommand;\n    let element = angular.element('<div></div>');\n    let attrs = { $observe: () => {} , placeholder: ''};\n    let pasteSpy;\n    let beforeExecSpy;\n    let afterExecSpy;\n    let mocks = {\n        list1: {title: 'Unordered List', command: 'insertunorderedlist', styleClass: 'list-ul'},\n        list2: {title: 'Ordered List', command: 'insertorderedlist', styleClass: 'list-ol'},\n        bold: {title: 'Bold', command: 'bold', styleClass: 'bold'},\n        italic: {title: 'Italic', command: 'italic', styleClass: 'italic'},\n        link: {title: 'Link', command: 'createlink', styleClass: 'link'}\n    };\n    let mockWindow;\n    let compile;\n\n    beforeEach(module('ngWig'));\n\n    beforeEach(inject((_$componentController_, _$q_, _$rootScope_, _$window_, _$compile_, _ngWigToolbar_) => {\n        mockWindow = _$window_;\n        compile = _$compile_;\n        $componentController = _$componentController_;\n        scope = _$rootScope_.$new();\n\n        pasteSpy = jasmine.createSpy('pasteSpy');\n        beforeExecSpy = jasmine.createSpy('beforeExecSpy');\n        afterExecSpy = jasmine.createSpy('afterExecSpy');\n\n        spyOn(_ngWigToolbar_, 'getToolbarButtons').and.returnValue(mocks);\n        spyOn(mockWindow.getSelection(), 'removeAllRanges');\n\n        component = $componentController('ngWig',\n                                            { $scope: scope, $element: element, $attrs: attrs },\n                                            { content: content, options: options, buttons: buttons, onPaste: pasteSpy, beforeExecCommand: beforeExecSpy, afterExecCommand: afterExecSpy }\n                                            );\n    }));\n\n    function getCompiledElement(template) {\n        let element = angular.element(template || '<ng-wig ng-model=\"text1\"><ng-wig>');\n        let compiledElement = compile(element)(scope);\n\n        scope.$digest();\n\n        controller = element.controller('ngWig');\n\n        return compiledElement;\n    }\n\n    it('should expose content', () => {\n        expect(component.content).toEqual(content);\n    });\n\n    it('should expose options', () => {\n        expect(component.options).toEqual(options);\n    });\n\n    it('should expose buttons', () => {\n        expect(component.buttons).toEqual(buttons);\n    });\n\n    it('should call onPaste', () => {\n        component.onPaste();\n\n        expect(pasteSpy).toHaveBeenCalled();\n    });\n\n    it('should call beforeExecCommand', () => {\n        component.beforeExecCommand();\n\n        expect(beforeExecSpy).toHaveBeenCalled();\n    });\n\n    it('should call afterExecCommand', () => {\n        component.afterExecCommand();\n\n        expect(afterExecSpy).toHaveBeenCalled();\n    });\n\n    it('should set required', () => {\n        expect(component.required).toEqual(false);\n    });\n\n    it('should set isSourceModeAllowed', () => {\n        expect(component.isSourceModeAllowed).toEqual(false);\n    });\n\n    it('should set editMode', () => {\n        expect(component.editMode).toEqual(false);\n    });\n\n    it('should set toolbarButtons', () => {\n        expect(component.toolbarButtons).toBe(mocks);\n    });\n\n    describe('isEditorActive function', () => {\n        it('should exist', () => {\n            expect(component.isEditorActive).not.toBe(null);\n        });\n\n        it('should return false', () => {\n            expect(component.isEditorActive()).toEqual(false);\n        });\n    });\n\n    describe('toggleEditMode function', () => {\n        it('should exist', () => {\n            expect(component.toggleEditMode).not.toBe(null);\n        });\n\n        it('should toggle the edit mode of the editor', () => {\n            component.toggleEditMode();\n\n            expect(component.editMode).toEqual(true);\n        });\n\n        it('should remove all ranges from the selection', () => {\n            component.toggleEditMode();\n\n            expect(mockWindow.getSelection().removeAllRanges).toHaveBeenCalled();\n        });\n    });\n\n    describe('execCommand function', () => {\n        beforeEach(() => {\n            spyOn(scope, '$broadcast');\n        });\n\n        it('should exist', () => {\n            expect(component.execCommand).not.toBe(null);\n        });\n\n        it('should return if the editor is in edit mode', () => {\n            component.editMode = true;\n\n            expect(component.execCommand('fakeCmd')).toEqual(false);\n        });\n\n        it('should broadcast the command', () => {\n            component.execCommand('fakeCmd', {});\n\n            expect(beforeExecSpy).toHaveBeenCalledWith({\n                command: 'fakeCmd',\n                options: {}\n            });\n            expect(scope.$broadcast).toHaveBeenCalledWith('execCommand', {\n                command: 'fakeCmd',\n                options: {}\n            });\n            expect(afterExecSpy).toHaveBeenCalledWith({\n                command: 'fakeCmd',\n                options: {}\n            });\n        });\n\n        it('should show a prompt when the command name is createlink', () => {\n            spyOn(mockWindow, 'prompt').and.returnValue('http://fakeLink');\n            component.execCommand('createlink');\n\n            expect(mockWindow.prompt).toHaveBeenCalledWith('Please enter the URL', 'http://');\n        });\n\n        it('should show a prompt when the command name is insertImage', () => {\n            spyOn(mockWindow, 'prompt').and.returnValue('http://fakeImage');\n            component.execCommand('insertImage');\n\n            expect(mockWindow.prompt).toHaveBeenCalledWith('Please enter the URL', 'http://');\n        });\n\n        it('should not show a prompt when the command is not createlink or insertImage', () => {\n            spyOn(mockWindow, 'prompt');\n            component.execCommand('fakeCmd');\n\n            expect(mockWindow.prompt).not.toHaveBeenCalled();\n        });\n\n        it('should return if the prompt is cancelled', () => {\n            spyOn(mockWindow, 'prompt').and.returnValue(undefined);\n            component.execCommand('createlink');\n\n            expect(beforeExecSpy).not.toHaveBeenCalled();\n            expect(scope.$broadcast).not.toHaveBeenCalled();\n            expect(afterExecSpy).not.toHaveBeenCalled();\n        });\n    });\n\n    it('should fail if ngModel is not provided', () => {\n        expect(() => { getCompiledElement('<ng-wig><ng-wig>') }).toThrow();\n    });\n\n    it('should set disabled property', () => {\n        element = getCompiledElement('<ng-wig disabled=\"true\" ng-model=\"text1\"></ng-wig>');\n        ngWigElement = angular.element(element[0].querySelector('#ng-wig-editable'));\n\n        expect(controller.disabled).toEqual('true');\n        expect(ngWigElement.attr('contenteditable')).toEqual('false');\n    });\n\n    describe('$onInit function', () => {\n        let ngWigElement;\n\n        it('should exist', () => {\n            expect(component.$onInit).not.toBe(null);\n        });\n\n        describe('$render function', () => {\n            beforeEach(() => {\n                element = getCompiledElement();\n                ngWigElement = angular.element(element[0].querySelector('#ng-wig-editable'));\n\n                spyOn(controller.ngModelController, '$setViewValue');\n            });\n\n            it('should render a paragraph element if ngModel value does not exist', () => {\n                expect(ngWigElement.html()).toEqual('<p></p>');\n            });\n\n            it('should update the model value on blur event', () => {\n                ngWigElement.triggerHandler('blur');\n\n                expect(controller.ngModelController.$setViewValue).toHaveBeenCalledWith('<p></p>');\n            });\n\n            it('should update the model value on keyup event', () => {\n                ngWigElement.triggerHandler('keyup');\n\n                expect(controller.ngModelController.$setViewValue).toHaveBeenCalledWith('<p></p>');\n            });\n\n            it('should update the model value on change event', () => {\n                ngWigElement.triggerHandler('change');\n\n                expect(controller.ngModelController.$setViewValue).toHaveBeenCalledWith('<p></p>');\n            });\n\n            it('should update the model value on focus event', () => {\n                ngWigElement.triggerHandler('focus');\n\n                expect(controller.ngModelController.$setViewValue).toHaveBeenCalledWith('<p></p>');\n            });\n\n            it('should update the model value on click event', () => {\n                ngWigElement.triggerHandler('click');\n\n                expect(controller.ngModelController.$setViewValue).toHaveBeenCalledWith('<p></p>');\n            });\n\n        });\n    });\n});\n\nangular.module('ngWig')\n    .config(['ngWigToolbarProvider', function (ngWigToolbarProvider) {\n       ngWigToolbarProvider.addCustomButton('formats', 'nw-formats-button');\n    }])\n    .component('nwFormatsButton', {\n        bindings: {\n            execCommand: '=',\n            editMode: '=',\n            disabled: '='\n        },\n        template: `<select class=\"nw-select\" \n                           ng-model=\"$ctrl.format\" \n                           ng-change=\"$ctrl.execCommand(\\'formatblock\\', $ctrl.format.value)\" \n                           ng-options=\"format.name for format in $ctrl.formats\" \n                           ng-disabled=\"$ctrl.editMode || $ctrl.disabled\"></select>`,\n        controller: function() {\n\n            this.formats = [\n                {name: 'Normal text', value: '<p>'},\n                {name: 'Header 1', value: '<h1>'},\n                {name: 'Header 2', value: '<h2>'},\n                {name: 'Header 3', value: '<h3>'}\n            ];\n\n            this.format = this.formats[0];\n        }\n    });\n\n\nangular.module('ngwig-app-templates', ['ng-wig/views/ng-wig.html']);\n\nangular.module(\"ng-wig/views/ng-wig.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"ng-wig/views/ng-wig.html\",\n    \"<div class=\\\"ng-wig\\\">\\n\" +\n    \"  <ul class=\\\"nw-toolbar\\\">\\n\" +\n    \"    <li class=\\\"nw-toolbar__item\\\" ng-repeat=\\\"button in $ctrl.toolbarButtons\\\">\\n\" +\n    \"        <div ng-if=\\\"!button.isComplex\\\">\\n\" +\n    \"          <button type=\\\"button\\\"\\n\" +\n    \"                  class=\\\"nw-button {{button.styleClass}}\\\"\\n\" +\n    \"                  title=\\\"{{button.title}}\\\"\\n\" +\n    \"                  ng-click=\\\"$ctrl.execCommand(button.command)\\\"\\n\" +\n    \"                  ng-class=\\\"{ 'nw-button--active': !$ctrl.disabled && $ctrl.isEditorActive() && button.isActive() }\\\"\\n\" +\n    \"                  ng-disabled=\\\"$ctrl.editMode || $ctrl.disabled\\\">\\n\" +\n    \"            {{ button.title }}\\n\" +\n    \"          </button>\\n\" +\n    \"        </div>\\n\" +\n    \"        <div ng-if=\\\"button.isComplex\\\">\\n\" +\n    \"          <ng-wig-plugin\\n\" +\n    \"              exec-command=\\\"$ctrl.execCommand\\\"\\n\" +\n    \"              plugin=\\\"button\\\"\\n\" +\n    \"              edit-mode=\\\"$ctrl.editMode\\\"\\n\" +\n    \"              disabled=\\\"$ctrl.disabled\\\"\\n\" +\n    \"              options=\\\"$ctrl.options\\\"\\n\" +\n    \"              content=\\\"$ctrl.content\\\"></ng-wig-plugin>\\n\" +\n    \"        </div>\\n\" +\n    \"    </li><!--\\n\" +\n    \"    --><li class=\\\"nw-toolbar__item\\\">\\n\" +\n    \"      <button type=\\\"button\\\"\\n\" +\n    \"              class=\\\"nw-button nw-button--source\\\"\\n\" +\n    \"              title=\\\"Edit HTML\\\"\\n\" +\n    \"              ng-class=\\\"{ 'nw-button--active': $ctrl.editMode }\\\"\\n\" +\n    \"              ng-if=\\\"$ctrl.isSourceModeAllowed\\\"\\n\" +\n    \"              ng-click=\\\"$ctrl.toggleEditMode()\\\"\\n\" +\n    \"              ng-disabled=\\\"$ctrl.disabled\\\">\\n\" +\n    \"        Edit HTML\\n\" +\n    \"      </button>\\n\" +\n    \"    </li>\\n\" +\n    \"  </ul>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"nw-editor-container\\\">\\n\" +\n    \"    <div class=\\\"nw-editor__src-container\\\" ng-show=\\\"$ctrl.editMode\\\">\\n\" +\n    \"      <textarea ng-model=\\\"$ctrl.content\\\"\\n\" +\n    \"                ng-disabled=\\\"$ctrl.disabled\\\"\\n\" +\n    \"                class=\\\"nw-editor__src\\\"></textarea>\\n\" +\n    \"    </div>\\n\" +\n    \"    <div class=\\\"nw-editor\\\" ng-class=\\\"{ 'nw-disabled': $ctrl.disabled }\\\">\\n\" +\n    \"      <div id=\\\"ng-wig-editable\\\"\\n\" +\n    \"           tabindex=\\\"-1\\\"\\n\" +\n    \"           class=\\\"nw-editor__res\\\"\\n\" +\n    \"           ng-class=\\\"{'nw-invisible': $ctrl.editMode}\\\"\\n\" +\n    \"           ng-disabled=\\\"$ctrl.disabled\\\"\\n\" +\n    \"           contenteditable\\n\" +\n    \"           placeholder=\\\"{{$ctrl.placeholder}}\\\">\\n\" +\n    \"      </div>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n"]}